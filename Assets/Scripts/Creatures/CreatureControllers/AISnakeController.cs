// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class AISnakeController : SnakeController
{
	public AISnakeController( Creature creature, MazeController mazeController ) : base( creature, mazeController )
	{
	}	
	
	/// <summary>
	/// Handles the arrival event - the creature arriving at the centre of a tile.  Returns the
	/// direction to travel in from this point on.
	/// </summary>
	public override SerpentConsts.Dir NewDirectionUponArrival()	
	{
		// Get our current direction first.  We want to turn in a random direction but not do a reverse turn.
		// So assemble a list of all the directions, excluding the opposite direction to the current, and also
		// excluding directions where motion is blocked.		
		SerpentConsts.Dir currentDirection = this.snake.Head.CurrentDirection;
		SerpentConsts.Dir oppositeDirection = SerpentConsts.OppositeDirection[ (int) currentDirection ];
		
		List<SerpentConsts.Dir> availableDirections = GetAvailableDirections();
		availableDirections.Remove(oppositeDirection);
			
		if (availableDirections.Count == 0) 
		{
			return SerpentConsts.Dir.N; 
		}
		
		int randomIndex = UnityEngine.Random.Range(0, availableDirections.Count);
		SerpentConsts.Dir randomDir = availableDirections[randomIndex];
		return randomDir;
	}
	
	
	
}


